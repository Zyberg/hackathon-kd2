{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ApiResponse_any_": {
				"properties": {
					"data": {
						"items": {},
						"type": "array"
					},
					"status": {
						"properties": {
							"message": {
								"type": "string"
							},
							"success": {
								"type": "boolean"
							}
						},
						"required": [
							"message",
							"success"
						],
						"type": "object"
					}
				},
				"required": [
					"data",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PAGINATION_ORDER": {
				"enum": [
					"ASC",
					"DESC"
				],
				"type": "string"
			},
			"DataTableQuery": {
				"properties": {
					"q": {
						"type": "string"
					},
					"field": {
						"type": "string"
					},
					"order": {
						"$ref": "#/components/schemas/PAGINATION_ORDER"
					},
					"page": {
						"type": "number",
						"format": "double"
					},
					"perPage": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Challenge": {
				"properties": {
					"parentId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"type": {
						"type": "string"
					},
					"goalCount": {
						"type": "number",
						"format": "double"
					},
					"endAt": {
						"type": "string",
						"format": "date-time"
					},
					"startAt": {
						"type": "string",
						"format": "date-time"
					},
					"unitId": {
						"type": "number",
						"format": "double"
					},
					"isActive": {
						"type": "boolean"
					},
					"description": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"parentId",
					"type",
					"goalCount",
					"endAt",
					"startAt",
					"unitId",
					"isActive",
					"description",
					"title",
					"id"
				],
				"type": "object",
				"description": "Model Challenge"
			},
			"ApiResponse_Challenge-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Challenge"
						},
						"type": "array"
					},
					"status": {
						"properties": {
							"message": {
								"type": "string"
							},
							"success": {
								"type": "boolean"
							}
						},
						"required": [
							"message",
							"success"
						],
						"type": "object"
					}
				},
				"required": [
					"data",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAllChallengesQuery": {
				"properties": {
					"q": {
						"type": "string"
					},
					"field": {
						"type": "string"
					},
					"order": {
						"$ref": "#/components/schemas/PAGINATION_ORDER"
					},
					"page": {
						"type": "number",
						"format": "double"
					},
					"perPage": {
						"type": "number",
						"format": "double"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ChallengeType": {
				"enum": [
					"GoalMax",
					"GoalCount"
				],
				"type": "string"
			},
			"ChallengeViewModel": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"startAt": {
						"type": "string",
						"format": "date-time"
					},
					"endAt": {
						"type": "string",
						"format": "date-time"
					},
					"goalCount": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/ChallengeType"
					},
					"parentId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"title",
					"startAt",
					"endAt",
					"goalCount",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChallengeCreateModel": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"unitId": {
						"type": "number",
						"format": "double"
					},
					"startAt": {
						"type": "string",
						"format": "date-time"
					},
					"endAt": {
						"type": "string",
						"format": "date-time"
					},
					"goalCount": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/ChallengeType"
					},
					"parentId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"title",
					"description",
					"isActive",
					"unitId",
					"endAt",
					"goalCount",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ChallengeUpdateModel": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"isActive": {
						"type": "boolean"
					},
					"unitId": {
						"type": "number",
						"format": "double"
					},
					"startAt": {
						"type": "string",
						"format": "date-time"
					},
					"endAt": {
						"type": "string",
						"format": "date-time"
					},
					"goalCount": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/ChallengeType"
					},
					"parentId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"title",
					"description",
					"isActive",
					"unitId",
					"startAt",
					"endAt",
					"goalCount",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Achievement": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"imagePath": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"max_users": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"title",
					"imagePath",
					"description",
					"max_users"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UnitCreateModel": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"title"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserGroupCreateModel": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"title"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FilteredUserInterface": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthenticationServiceTokenResponseData": {
				"properties": {
					"token": {
						"type": "string"
					},
					"expires_in": {
						"type": "number",
						"format": "double"
					},
					"user": {
						"$ref": "#/components/schemas/FilteredUserInterface"
					}
				},
				"required": [
					"token",
					"expires_in",
					"user"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_AuthenticationServiceTokenResponseData_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/AuthenticationServiceTokenResponseData"
					},
					"status": {
						"properties": {
							"message": {
								"type": "string"
							},
							"success": {
								"type": "boolean"
							}
						},
						"required": [
							"message",
							"success"
						],
						"type": "object"
					}
				},
				"required": [
					"data",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserLoginRequest": {
				"properties": {
					"email": {
						"type": "string",
						"format": "email"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"roleId": {
						"type": "number",
						"format": "double"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"roleId",
					"password",
					"name",
					"email",
					"id"
				],
				"type": "object",
				"description": "Model User"
			},
			"ApiResponse_User_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/User"
					},
					"status": {
						"properties": {
							"message": {
								"type": "string"
							},
							"success": {
								"type": "boolean"
							}
						},
						"required": [
							"message",
							"success"
						],
						"type": "object"
					}
				},
				"required": [
					"data",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthScope": {
				"enum": [
					"Admin",
					"User"
				],
				"type": "string"
			},
			"UserCreateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"scope": {
						"$ref": "#/components/schemas/AuthScope"
					}
				},
				"required": [
					"name",
					"email",
					"password",
					"scope"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserViewModel": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"role": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"email",
					"role"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_UserViewModel_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/UserViewModel"
					},
					"status": {
						"properties": {
							"message": {
								"type": "string"
							},
							"success": {
								"type": "boolean"
							}
						},
						"required": [
							"message",
							"success"
						],
						"type": "object"
					}
				},
				"required": [
					"data",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer"
			}
		}
	},
	"info": {
		"title": "rest-express",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "q",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "field",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/PAGINATION_ORDER"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/users/{id}": {
			"delete": {
				"operationId": "DeleteUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/challenges": {
			"get": {
				"operationId": "GetAllChallenges",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_Challenge-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Challenge"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "q",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "field",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/PAGINATION_ORDER"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "isActive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChallengeViewModel"
								}
							}
						}
					}
				},
				"tags": [
					"Challenge"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChallengeCreateModel"
							}
						}
					}
				}
			}
		},
		"/challenges/{id}": {
			"get": {
				"operationId": "GetChallengeById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChallengeViewModel"
								}
							}
						}
					}
				},
				"tags": [
					"Challenge"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChallengeCreateModel"
								}
							}
						}
					}
				},
				"tags": [
					"Challenge"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChallengeUpdateModel"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Challenge"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/challenges/{id}/join/{userId}": {
			"post": {
				"operationId": "Join",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChallengeCreateModel"
								}
							}
						}
					}
				},
				"tags": [
					"Challenge"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/achievements": {
			"get": {
				"operationId": "GetAllAchievements",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"Achievement"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "q",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "field",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/PAGINATION_ORDER"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Achievement"
								}
							}
						}
					}
				},
				"tags": [
					"Achievement"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Achievement"
							}
						}
					}
				}
			}
		},
		"/achievements/{id}": {
			"get": {
				"operationId": "GetAchievementById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Achievement"
								}
							}
						}
					}
				},
				"tags": [
					"Achievement"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Achievement"
								}
							}
						}
					}
				},
				"tags": [
					"Achievement"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Achievement"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Achievement"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/units": {
			"get": {
				"operationId": "GetAllUnits",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"Unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "q",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "field",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/PAGINATION_ORDER"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UnitCreateModel"
								}
							}
						}
					}
				},
				"tags": [
					"Unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UnitCreateModel"
							}
						}
					}
				}
			}
		},
		"/units/{id}": {
			"get": {
				"operationId": "GetUnitById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UnitCreateModel"
								}
							}
						}
					}
				},
				"tags": [
					"Unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UnitCreateModel"
								}
							}
						}
					}
				},
				"tags": [
					"Unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UnitCreateModel"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/userGroups": {
			"get": {
				"operationId": "GetAllUserGroups",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"UserGroup"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "q",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "field",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "order",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/PAGINATION_ORDER"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "perPage",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserGroupCreateModel"
								}
							}
						}
					}
				},
				"tags": [
					"UserGroup"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserGroupCreateModel"
							}
						}
					}
				}
			}
		},
		"/userGroups/{id}": {
			"get": {
				"operationId": "GetUserGroupById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserGroupCreateModel"
								}
							}
						}
					}
				},
				"tags": [
					"UserGroup"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserGroupCreateModel"
								}
							}
						}
					}
				},
				"tags": [
					"UserGroup"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserGroupCreateModel"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"UserGroup"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/auth/login/strava": {
			"post": {
				"operationId": "LoginStrava",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/login/password": {
			"post": {
				"operationId": "LoginPassword",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_AuthenticationServiceTokenResponseData_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserLoginRequest"
							}
						}
					}
				}
			}
		},
		"/auth/tokens/refresh": {
			"post": {
				"operationId": "RefreshToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_AuthenticationServiceTokenResponseData_"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/signup": {
			"post": {
				"operationId": "Signup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_User_"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreateRequest"
							}
						}
					}
				}
			}
		},
		"/auth/user": {
			"get": {
				"operationId": "User",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_UserViewModel_"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/logout": {
			"post": {
				"operationId": "Logout",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}